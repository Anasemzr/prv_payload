func (t *Tunnel) handleSocks(src io.ReadWriteCloser) error {
  if t.Proxy == nil {
    // Default behavior: use internal DNS server
    return t.socksServer.ServeConn(cnet.NewRWCConn(src))
  }

  // Use proxy server for DNS resolution
  return t.handleSocksWithProxy(src, t.Proxy)
}

func (t *Tunnel) handleSocksWithProxy(src io.ReadWriteCloser, proxy *net.Proxy) error {
  // Create a SOCKS5 dialer using the proxy
  dialer := &net.Dialer{Proxy: proxy}

  // Wrap the SOCKS server with a Proxy SOCKS server
  proxySocks := cnet.NewProxySOCKS(t.socksServer, dialer)

  // Serve the connection using the proxy-aware SOCKS server
  return proxySocks.ServeConn(cnet.NewRWCConn(src))
}
